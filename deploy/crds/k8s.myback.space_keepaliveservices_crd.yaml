apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: keepaliveservices.k8s.myback.space
spec:
  group: k8s.myback.space
  names:
    kind: KeepAliveService
    listKind: KeepAliveServiceList
    plural: keepaliveservices
    singular: keepaliveservice
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KeepAliveService is the Schema for the keepaliveservices API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KeepAliveServiceSpec defines the desired state of KeepAliveService
            properties:
              hosts:
                items:
                  type: string
                type: array
              ports:
                items:
                  properties:
                    appProtocol:
                      description: The application protocol for this port. This field
                        follows standard Kubernetes label syntax. Un-prefixed names
                        are reserved for IANA standard service names (as per RFC-6335
                        and http://www.iana.org/assignments/service-names). Non-standard
                        protocols should use prefixed names such as mycompany.com/my-custom-protocol.
                        Field can be enabled with ServiceAppProtocol feature gate.
                      type: string
                    name:
                      description: The name of this port within the service. This
                        must be a DNS_LABEL. All ports within a ServiceSpec must have
                        unique names. When considering the endpoints for a Service,
                        this must match the 'name' field in the EndpointPort. Optional
                        if only one ServicePort is defined on this service.
                      type: string
                    nodePort:
                      description: 'The port on each node on which this service is
                        exposed when type=NodePort or LoadBalancer. Usually assigned
                        by the system. If specified, it will be allocated to the service
                        if unused or else creation of the service will fail. Default
                        is to auto-allocate a port if the ServiceType of this Service
                        requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport'
                      format: int32
                      type: integer
                    port:
                      description: The port that will be exposed by this service.
                      format: int32
                      type: integer
                    protocol:
                      description: The IP protocol for this port. Supports "TCP",
                        "UDP", and "SCTP". Default is TCP.
                      type: string
                    targetPort:
                      anyOf:
                      - type: integer
                      - type: string
                      description: 'Number or name of the port to access on the pods
                        targeted by the service. Number must be in the range 1 to
                        65535. Name must be an IANA_SVC_NAME. If this is a string,
                        it will be looked up as a named port in the target Pod''s
                        container ports. If this is not specified, the value of the
                        ''port'' field is used (an identity map). This field is ignored
                        for services with clusterIP=None, and should be omitted or
                        set equal to the ''port'' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service'
                      x-kubernetes-int-or-string: true
                  required:
                  - name
                  - port
                  type: object
                type: array
              readinessProbe:
                properties:
                  failureThreshold:
                    format: int32
                    type: integer
                  httpGet:
                    properties:
                      httpHeaders:
                        additionalProperties:
                          type: string
                        type: object
                      path:
                        type: string
                      portsName:
                        items:
                          type: string
                        type: array
                    required:
                    - portsName
                    type: object
                  periodExtend:
                    format: int32
                    type: integer
                  periodSeconds:
                    format: int32
                    type: integer
                  script:
                    items:
                      type: string
                    type: array
                  successThreshold:
                    format: int32
                    type: integer
                  tcpSocket:
                    properties:
                      portsName:
                        items:
                          type: string
                        type: array
                    required:
                    - portsName
                    type: object
                  timeout:
                    format: int32
                    type: integer
                type: object
              template:
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    type: object
                  name:
                    type: string
                type: object
              type:
                description: Service Type string describes ingress methods for a service
                type: string
            required:
            - hosts
            - ports
            type: object
          status:
            description: KeepAliveServiceStatus defines the observed state of KeepAliveService
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
